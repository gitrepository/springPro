Tomcat 7
http://tomcat.apache.org/maven-plugin-2.0/tomcat7-maven-plugin/plugin-info.html


1. Tomcat Authentication
First, add an user with administrator access right for Tomcat. 
To add Tomcat user, edit this file – “%TOMCAT_PATH%/conf/tomcat-users.xml“.

File : tomcat-users.xml

<?xml version='1.0' encoding='utf-8'?>
<tomcat-users>
	<role rolename="manager-script"/>
	<user username="admin" password="admin" roles="manager-script"/>
</tomcat-users>

2. Maven Authentication
In Maven side, you need to add the same user authentication information in “%MAVEN_PATH%/conf/settings.xml“.

File : settings.xml

//...
<server>
	<id>TomcatServer</id>
	<username>admin</username>
	<password>admin</password>
</server>
//...

3. Maven-Tomcat-Plugin
Declare “Maven-Tomcat plugin” and related Tomcat server detail in your pom.xml file.

<plugin>
	<groupId>org.apache.tomcat.maven</groupId>
	<artifactId>tomcat7-maven-plugin</artifactId>
	<version>2.2</version>
    <configuration>
		<url>http://localhost:8080/manager/text</url>
		<server>TomcatServer</server>
		<path>/springPro</path>
    </configuration>
</plugin>

How it works ?
During deployment, it tell Maven to deploy the WAR file to Tomcat server (http://127.0.0.1:8080/), 
-on path “/mkyongWebApp“, and using “TomcatServer” (in settings.xml) username and password for authentication.

4. Deploy to Tomcat
Issue “mvn tomcat:deploy” to package your project in a WAR file, and deploy it to Tomcat server. 
To verify it, just access to the Tomcat’s manager page and make sure “/mkyongWebApp” path is existed.

URL : http://127.0.0.1:8080/manager/


